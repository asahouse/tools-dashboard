/*
 * This file is generated by jOOQ.
*/
package org.codeworks.web.tools.dashboard.myspace.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.codeworks.web.tools.dashboard.myspace.jooq.Keys;
import org.codeworks.web.tools.dashboard.myspace.jooq.Myspace2;
import org.codeworks.web.tools.dashboard.myspace.jooq.tables.records.ClicklikeRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Clicklike extends TableImpl<ClicklikeRecord> {

    private static final long serialVersionUID = 1416197690;

    /**
     * The reference instance of <code>myspace2.clicklike</code>
     */
    public static final Clicklike CLICKLIKE = new Clicklike();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClicklikeRecord> getRecordType() {
        return ClicklikeRecord.class;
    }

    /**
     * The column <code>myspace2.clicklike.id</code>.
     */
    public final TableField<ClicklikeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>myspace2.clicklike.galleryId</code>.
     */
    public final TableField<ClicklikeRecord, Integer> GALLERYID = createField("galleryId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>myspace2.clicklike.detailId</code>.
     */
    public final TableField<ClicklikeRecord, Integer> DETAILID = createField("detailId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>myspace2.clicklike.userId</code>.
     */
    public final TableField<ClicklikeRecord, Integer> USERID = createField("userId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>myspace2.clicklike.openId</code>.
     */
    public final TableField<ClicklikeRecord, String> OPENID = createField("openId", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>myspace2.clicklike.nickName</code>.
     */
    public final TableField<ClicklikeRecord, String> NICKNAME = createField("nickName", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>myspace2.clicklike.headImgUrl</code>.
     */
    public final TableField<ClicklikeRecord, String> HEADIMGURL = createField("headImgUrl", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>myspace2.clicklike.createTime</code>.
     */
    public final TableField<ClicklikeRecord, Timestamp> CREATETIME = createField("createTime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>myspace2.clicklike</code> table reference
     */
    public Clicklike() {
        this("clicklike", null);
    }

    /**
     * Create an aliased <code>myspace2.clicklike</code> table reference
     */
    public Clicklike(String alias) {
        this(alias, CLICKLIKE);
    }

    private Clicklike(String alias, Table<ClicklikeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Clicklike(String alias, Table<ClicklikeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Myspace2.MYSPACE2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ClicklikeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CLICKLIKE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClicklikeRecord> getPrimaryKey() {
        return Keys.KEY_CLICKLIKE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClicklikeRecord>> getKeys() {
        return Arrays.<UniqueKey<ClicklikeRecord>>asList(Keys.KEY_CLICKLIKE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Clicklike as(String alias) {
        return new Clicklike(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Clicklike rename(String name) {
        return new Clicklike(name, null);
    }
}
