/*
 * This file is generated by jOOQ.
*/
package org.codeworks.web.tools.dashboard.myspace.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.codeworks.web.tools.dashboard.myspace.jooq.Keys;
import org.codeworks.web.tools.dashboard.myspace.jooq.Myspace2;
import org.codeworks.web.tools.dashboard.myspace.jooq.tables.records.ComplainRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Complain extends TableImpl<ComplainRecord> {

    private static final long serialVersionUID = 1027141678;

    /**
     * The reference instance of <code>myspace2.complain</code>
     */
    public static final Complain COMPLAIN = new Complain();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ComplainRecord> getRecordType() {
        return ComplainRecord.class;
    }

    /**
     * The column <code>myspace2.complain.id</code>.
     */
    public final TableField<ComplainRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>myspace2.complain.galleryId</code>.
     */
    public final TableField<ComplainRecord, Integer> GALLERYID = createField("galleryId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>myspace2.complain.userId</code>.
     */
    public final TableField<ComplainRecord, Integer> USERID = createField("userId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>myspace2.complain.content</code>.
     */
    public final TableField<ComplainRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>myspace2.complain.createTime</code>.
     */
    public final TableField<ComplainRecord, Timestamp> CREATETIME = createField("createTime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>myspace2.complain</code> table reference
     */
    public Complain() {
        this("complain", null);
    }

    /**
     * Create an aliased <code>myspace2.complain</code> table reference
     */
    public Complain(String alias) {
        this(alias, COMPLAIN);
    }

    private Complain(String alias, Table<ComplainRecord> aliased) {
        this(alias, aliased, null);
    }

    private Complain(String alias, Table<ComplainRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Myspace2.MYSPACE2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ComplainRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COMPLAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ComplainRecord> getPrimaryKey() {
        return Keys.KEY_COMPLAIN_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ComplainRecord>> getKeys() {
        return Arrays.<UniqueKey<ComplainRecord>>asList(Keys.KEY_COMPLAIN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Complain as(String alias) {
        return new Complain(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Complain rename(String name) {
        return new Complain(name, null);
    }
}
